# -*- coding: utf-8 -*-
"""cp321 a7

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1lIIqjC77PR6xRcnBCHvEFxUG4bKgmZip
"""

pip install dash

import dash
from dash import html, dcc, Output, Input
import pandas as pd
import plotly.express as px

df = pd.read_csv("world_cup_finals.csv")
win_counts = df['Winner'].value_counts().reset_index()
win_counts.columns = ['Country', 'Wins']

country_codes = {
    'Germany': 'DEU',
    'Brazil': 'BRA',
    'Italy': 'ITA',
    'Argentina': 'ARG',
    'Uruguay': 'URY',
    'France': 'FRA',
    'England': 'GBR',
    'Spain': 'ESP'
}

win_counts['iso_alpha'] = win_counts['Country'].map(country_codes)


fig_map = px.choropleth(win_counts,
                        locations='iso_alpha',
                        color='Wins',
                        hover_name='Country',
                        color_continuous_scale=px.colors.sequential.Plasma,
                        title="FIFA World Cup Wins by Country")

# --- Dash App Layout and Callbacks ---
app = dash.Dash(__name__)

app.layout = html.Div([
    html.H1("FIFA World Cup Dashboard", style={'textAlign': 'center', 'margin-bottom': '20px'}),

    # Interactive dropdowns placed above the map with a white background
    html.Div([
        html.Div([
            html.H2("Select a country to see its number of wins"),
            dcc.Dropdown(
                id='country-dropdown',
                options=[{'label': country, 'value': country} for country in win_counts['Country']],
                placeholder="Select a country"
            ),
            html.Div(id='country-wins', style={'marginTop': '0px'})
        ], style={
            'width': '45%',
            'display': 'inline-block',
            'verticalAlign': 'top',
            'marginRight': '5%',
            'backgroundColor': 'white',
            'padding': '10px'
        }),

        html.Div([
            html.H2("Select a year to view final match details"),
            dcc.Dropdown(
                id='year-dropdown',
                options=[{'label': year, 'value': year} for year in df['Year']],
                placeholder="Select a year"
            ),
            html.Div(id='match-details', style={'marginTop': '0px'})
        ], style={
            'width': '45%',
            'display': 'inline-block',
            'verticalAlign': 'top',
            'backgroundColor': 'white',
            'padding': '10px'
        })
    ], style={'marginBottom': '0px'}),

    # Choropleth map is displayed below the interactive dropdowns
    dcc.Graph(id='choropleth-map', figure=fig_map, style={'marginTop': '0px'}),

    # List of winning countries appears after the map

])

# Callback to display number of wins for the selected country
@app.callback(
    Output('country-wins', 'children'),
    Input('country-dropdown', 'value')
)
def display_country_wins(selected_country):
    if selected_country:
        wins = win_counts.loc[win_counts['Country'] == selected_country, 'Wins'].iloc[0]
        return html.P(f"{selected_country} has won the World Cup {wins} times.")
    return ""

# Callback to display match details for the selected year
@app.callback(
    Output('match-details', 'children'),
    Input('year-dropdown', 'value')
)
def display_match_details(selected_year):
    if selected_year:
        match = df.loc[df['Year'] == selected_year].iloc[0]
        return html.P(f"In {selected_year}, {match['Winner']} won the World Cup with {match['RunnerUp']} as runner-up.")
    return ""

if __name__ == '__main__':
    app.run(debug=True)